// Generated by CoffeeScript 2.1.1
(function() {
    // A fast and type safe deep (recursive) object/array/function freeze

  // MIT License

  // Copyright (c) 2018 Dennis Raymondo van der Sluis

  // Permission is hereby granted, free of charge, to any person obtaining a copy
  // of this software and associated documentation files (the "Software"), to deal
  // in the Software without restriction, including without limitation the rights
  // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  // copies of the Software, and to permit persons to whom the Software is
  // furnished to do so, subject to the following conditions:

  // The above copyright notice and this permission notice shall be included in all
  // copies or substantial portions of the Software.

  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  // SOFTWARE.

  var FUNCTION_PROPS, freezeDeep, isArrObj, isFunction, specialFunction,
    hasProp = {}.hasOwnProperty;

  FUNCTION_PROPS = ['caller', 'callee', 'arguments'];

  // use flawed 'object' identification to allow for arrays
  isArrObj = function(obj) {
    return typeof obj === 'object';
  };

  isFunction = function(obj) {
    return typeof obj === 'function';
  };

  specialFunction = function(key, value) {
    return (isFunction(value)) && (~FUNCTION_PROPS.indexOf(key));
  };

  module.exports = freezeDeep = function(obj, recurse) {
    var key, value;
    // don't try to loop over a non-object/array
    if (recurse || (isArrObj(obj)) || (isFunction(obj))) {
      Object.freeze(obj);
      for (key in obj) {
        if (!hasProp.call(obj, key)) continue;
        value = obj[key];
        if (Object.isFrozen(value)) {
          continue;
        }
        if ((isArrObj(value)) || (specialFunction(key, value))) {
          freezeDeep(value, true);
        }
      }
    }
    return obj;
  };

}).call(this);
